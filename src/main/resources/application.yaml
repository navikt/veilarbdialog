spring:
  application:
    name: "veilarbdialog"
  data:
    jdbc:
      repositories:
        enabled: false
  flyway:
    enabled: false
    ###############################################
    #                KAFKA AIVEN                  #
    ###############################################
  kafka:
    producer:
      properties:
        enable:
          idempotence: 'true'
        max:
          block:
            ms: '2000'
      acks: all
      batch-size: '1'
    properties:
      ssl:
        truststore:
          type: JKS
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        key:
          password: ${KAFKA_CREDSTORE_PASSWORD}
        keystore:
          password: ${KAFKA_CREDSTORE_PASSWORD}
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
      security:
        protocol: SSL
      schema:
        registry:
          url: ${KAFKA_SCHEMA_REGISTRY}
      basic:
        auth:
          credentials:
            source: USER_INFO
          user:
            info: ${KAFKA_SCHEMA_REGISTRY_USER}:${KAFKA_SCHEMA_REGISTRY_PASSWORD}
      specific:
        avro:
          reader: true
    bootstrap-servers: ${KAFKA_BROKERS}
    consumer:
      group-id: 'veilarbdialog'
      max-poll-records: 1
      properties:
        enable:
          auto:
            commit: true
        retry:
          backoff:
            ms: 2000
        reconnect:
          backoff:
            ms: 2000
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    listener:
      ack-mode: record
  mvc:
    pathmatch:
      matching-strategy: 'ant_path_matcher'
  task:
    scheduling:
      pool:
        size: '5'
server:
  servlet:
    context-path: "/veilarbdialog"

# See https://nav-it.slack.com/archives/CQ2H1AY3Z/p1602594649050400.
# Remove once commons is bumped and obsolete commons code is no longer included.
logging:
  level:
    org.apache.tomcat.util.http.parser.Cookie: OFF

management:
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
      base-path: "/internal"
  metrics:
    export:
      prometheus:
        enabled: true

application:
  loginservice:
    idporten:
      discoveryUrl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
      audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE}
  cluster: ${APP_CLUSTER_NAME}
  namespace: ${NAIS_NAMESPACE}
  environment: ${APP_ENVIRONMENT_NAME}
  abac:
    url: ${ABAC_PDP_ENDPOINT_URL}
  aktorregister:
    url: ${AKTOERREGISTER_API_V1_URL}
  azure:
    ad:
      clientId: ${AZURE_APP_CLIENT_ID}
      discoveryUrl: ${AZURE_APP_WELL_KNOWN_URL}
      loginservice:
        clientId: ${VEILARBLOGIN_AAD_CLIENT_ID}
    b2c:
      clientId: ${AAD_B2C_CLIENTID_USERNAME}
      discoveryUrl: ${AAD_B2C_DISCOVERY_URL}
  datasource:
    url: ${JDBC_URL}
    username: ${JDBC_USERNAME}
    password: ${JDBC_PASSWORD}
  dialog:
    url: ${ARBEIDSRETTET_DIALOG_URL}
  kafka:
    brokersUrl: ${KAFKA_BROKERS_URL}
    endringPaaDialogTopic: ${ENDRING_PAA_DIALOG_TOPIC}
    oppfolgingAvsluttetTopic: ${OPPFOLGING_AVSLUTTET_TOPIC}
    kvpAvsluttetTopic: ${KVP_AVSLUTTET_TOPIC}
  aktorRegister:
    url: ${AKTOERREGISTER_API_V1_URL}
  mq:
    hostname: ${MQGATEWAY03_HOSTNAME}
    port: ${MQGATEWAY03_PORT}
    name: ${MQGATEWAY03_NAME}
    queues:
      oppgaveHenvendelse: ${HENVENDELSE_OPPGAVE_HENVENDELSE_QUEUENAME}
      stoppVarslinger: ${VARSELPRODUKSJON_STOPP_VARSEL_UTSENDING_QUEUENAME}
      varselHandling: ${VARSELPRODUKSJON_BEST_VARSEL_M_HANDLING_QUEUENAME}
      varslinger: ${VARSELPRODUKSJON_VARSLINGER_QUEUENAME}
    userid: srvappserver
  openam:
    clientId: ${VEILARBLOGIN_OPENAM_CLIENT_ID}
    discoveryUrl: ${OPENAM_DISCOVERY_URL}
    refreshUrl: ${VEILARBLOGIN_OPENAM_REFRESH_URL}
  serviceuser:
    username: ${SERVICEUSER_USERNAME}
    password: ${SERVICEUSER_PASSWORD}
  sts:
    discovery:
      url: ${SECURITY_TOKEN_SERVICE_DISCOVERY_URL}
  unleash:
    url: ${UNLEASH_API_URL}
  veilarboppfolging:
    api:
      url: ${VEILARBOPPFOLGINGAPI_URL}
  veilarbperson:
    api:
      url: ${VEILARBPERSONAPI_URL}
  topic:
    inn:
      sisteOppfolgingsperiode: pto.siste-oppfolgingsperiodeId-v1
    ut:
      brukernotifikasjon:
        oppgave: min-side.aapen-brukernotifikasjon-oppgave-v1
        done: min-side.aapen-brukernotifikasjon-done-v1
