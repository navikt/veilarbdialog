spring:
  application:
    name: "veilarbdialog"
  data:
    jdbc:
      repositories:
        enabled: false
  cloud:
    gateway:
      mvc:
        enabled: ${FSS_PROXY_ENABLED:true}
  flyway:
    enabled: false
    ###############################################
    #                KAFKA AIVEN                  #
    ###############################################
  kafka:
    producer:
      properties:
        enable:
          idempotence: 'true'
        max:
          block:
            ms: '2000'
      acks: all
      batch-size: '1'
    properties:
      ssl:
        truststore:
          type: JKS
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        key:
          password: ${KAFKA_CREDSTORE_PASSWORD}
        keystore:
          password: ${KAFKA_CREDSTORE_PASSWORD}
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
      security:
        protocol: SSL
      schema:
        registry:
          url: ${KAFKA_SCHEMA_REGISTRY}
      basic:
        auth:
          credentials:
            source: USER_INFO
          user:
            info: ${KAFKA_SCHEMA_REGISTRY_USER}:${KAFKA_SCHEMA_REGISTRY_PASSWORD}
    bootstrap-servers: ${KAFKA_BROKERS}
    consumer:
      group-id: 'veilarbdialog'
      max-poll-records: 1
      properties:
        enable:
          auto:
            commit: true
        retry:
          backoff:
            max:
              ms: 2000
            ms: 2000
        reconnect:
          backoff:
            max:
              ms: 2000
            ms: 2000
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    listener:
      ack-mode: record
  mvc:
    pathmatch:
      matching-strategy: 'ant_path_matcher'
  task:
    scheduling:
      pool:
        size: '5'
server:
  servlet:
    context-path: "/veilarbdialog"

# See https://nav-it.slack.com/archives/CQ2H1AY3Z/p1602594649050400.
# Remove once commons is bumped and obsolete commons code is no longer included.
logging:
  level:
    org.apache.tomcat.util.http.parser.Cookie: OFF

management:
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
      base-path: "/internal"
  metrics:
    export:
      prometheus:
        enabled: true

application:
  cluster: ${APP_CLUSTER_NAME}
  namespace: ${NAIS_NAMESPACE}
  poao_tilgang:
    url: ${POAO_TILGANG_URL}
    scope: ${POAO_TILGANG_SCOPE}
  azure:
    ad:
      clientId: ${AZURE_APP_CLIENT_ID}
      discoveryUrl: ${AZURE_APP_WELL_KNOWN_URL}
    b2c:
      clientId: ${AAD_B2C_CLIENTID_USERNAME}
      discoveryUrl: ${AAD_B2C_DISCOVERY_URL}
  datasource:
    url: ${DB_JDBC_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  dialog:
    url: ${DIALOG_EKSTERN_URL}
  kafka:
    brokersUrl: ${KAFKA_BROKERS_URL}
  serviceuser:
    username: ${SERVICEUSER_USERNAME}
    password: ${SERVICEUSER_PASSWORD}
  veilarboppfolging:
    api:
      url: ${VEILARBOPPFOLGINGAPI_URL}
      azureScope: ${VEILARBOPPFOLGINGAPI_AZURE_SCOPE}
      tokenXScope: ${VEILARBOPPFOLGINGAPI_TOKENX_SCOPE}
  pdl:
    api:
      url: ${PDL_URL}
  please:
    api:
      url: ${PLEASE_URL}
      azureScope: ${PLEASE_AZURE_SCOPE}
      tokenXScope: ${PLEASE_TOKENX_SCOPE}
  topic:
    inn:
      oppfolgingsperiode: pto.oppfolgingsperiode-v1
      kvpavsluttet: pto.kvp-avsluttet-v1
      aktivitetskortIdMapping: dab.aktivitetskort-idmapping-v1
      minside:
        varsel-hendelse: min-side.aapen-varsel-hendelse-v1
    ut:
      minside:
        varsel: min-side.aapen-brukervarsel-v1
      endringPaaDialog: dab.endring-paa-dialog-v1
      oversikten: obo.portefolje-hendelsesfilter-v1
  brukernotifikasjon:
    grace:
      periode:
        ms: 1800000
    henvendelse:
      maksalder:
        ms: 172800000
  gcp:
    projectId: ${GCP_TEAM_PROJECT_ID}

unleash:
  appName: ${NAIS_APP_NAME}
  url: ${UNLEASH_SERVER_API_URL}
  token: ${UNLEASH_SERVER_API_TOKEN}
  instanceId: ${NAIS_CLIENT_ID}

app:
  kafka:
    enabled: ${KAFKA_ENABLED:true}
